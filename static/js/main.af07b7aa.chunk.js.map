{"version":3,"sources":["components/Map/InfoPopup/InfoPopup.js","components/Map/Map.js","components/Layout/CasesCard/Graph/Graph.js","components/Layout/CasesCard/CasesCard.js","components/Layout/Search/Search.js","components/Layout/ZoomControl/ZoomControl.js","components/Layout/Layout.js","components/States/Loading/Loading.js","components/States/Error/Error.js","App.js","index.js"],"names":["InfoPopup","data","handlePopupClose","Popup","autoPan","className","position","countryInfo","lat","long","onClose","src","flag","alt","width","Typography","variant","country","value","cases","displayType","thousandSeparator","recovered","deaths","Map","selectedCountry","mapZoom","setMapZoom","useState","popup","setPopup","center","viewport","setViewport","useEffect","zoom","minZoom","maxBoundsViscosity","maxBounds","Infinity","worldCopyJump","zoomControl","onViewportChange","handleViewportChange","maxZoom","animate","TileLayer","url","attribution","map","Circle","onClick","handleClick","color","key","fillOpacity","radius","Math","sqrt","defaults","global","defaultFontFamily","defaultFontColor","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","format","scales","xAxes","gridLines","type","time","tooltipFormat","unitStepSize","displayFormats","day","week","month","quarter","year","yAxes","ticks","callback","index","fethcGraphData","a","fetch","res","json","message","labels","Object","keys","timeline","datasets","values","fill","backgroundColor","borderColor","borderCapStyle","borderDash","pointHoverBorderWidth","pointRadius","pointHitRadius","Graph","useQuery","status","Skeleton","height","JavascriptTimeAgo","addLocale","en","fetchAll","CasesCard","Hidden","smDown","Card","CardContent","updated","gutterBottom","ReactTimeAgo","date","Date","prefix","todayCases","todayRecovered","todayDeaths","Search","setSelectedCountry","Autocomplete","onChange","e","newValue","handleOnChange","autoHighlight","getOptionLabel","option","renderOption","renderInput","params","TextField","margin","inputProps","autoComplete","ZoomControl","xsDown","IconButton","disabled","aria-label","size","Divider","Layout","Loading","Backdrop","style","zIndex","flexDirection","open","CircularProgress","marginTop","Error","align","fetchData","App","refetchOnWindowFocus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af07b7aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Popup } from 'react-leaflet';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './InfoPopup.css';\r\n\r\nconst InfoPopup = ({ data, handlePopupClose }) => {\r\n\treturn (\r\n\t\t<Popup\r\n\t\t\tautoPan={false}\r\n\t\t\tclassName='infoPopup__popup'\r\n\t\t\tposition={[data.countryInfo.lat, data.countryInfo.long]}\r\n\t\t\tonClose={handlePopupClose}>\r\n\t\t\t<div className='InfoPopup__popupContent'>\r\n\t\t\t\t<div className='infoPopup__header'>\r\n\t\t\t\t\t<img src={data.countryInfo.flag} alt='country flag' width={24}></img>\r\n\t\t\t\t\t<Typography variant='h6'>{data.country}</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='infoPopup__row'>\r\n\t\t\t\t\t<Typography variant='subtitle2'>Cases</Typography>\r\n\t\t\t\t\t<Typography variant='subtitle2'>\r\n\t\t\t\t\t\t<NumberFormat value={data.cases} displayType={'text'} thousandSeparator={true} />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='infoPopup__row'>\r\n\t\t\t\t\t<Typography variant='subtitle2'>Recovered</Typography>\r\n\t\t\t\t\t<Typography variant='subtitle2'>\r\n\t\t\t\t\t\t<NumberFormat value={data.recovered} displayType={'text'} thousandSeparator={true} />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='infoPopup__row'>\r\n\t\t\t\t\t<Typography variant='subtitle2'>Deaths</Typography>\r\n\t\t\t\t\t<Typography variant='subtitle2'>\r\n\t\t\t\t\t\t<NumberFormat value={data.deaths} displayType={'text'} thousandSeparator={true} />\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Popup>\r\n\t);\r\n};\r\n\r\nInfoPopup.propTypes = {\r\n\tdata: PropTypes.array,\r\n\thandlePopupClose: PropTypes.func\r\n};\r\n\r\nexport default InfoPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { InfoPopup } from './';\r\nimport { Map as LeafletMap, TileLayer, Circle } from 'react-leaflet';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport 'leaflet/dist/leaflet.css';\r\nimport './Map.css';\r\n\r\nconst Map = ({ data, selectedCountry, mapZoom, setMapZoom }) => {\r\n\tconst [popup, setPopup] = useState(null);\r\n\tconst [viewport, setViewport] = useState({\r\n\t\tcenter: [50, 31]\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedCountry) {\r\n\t\t\tconst { lat, long } = selectedCountry.countryInfo;\r\n\r\n\t\t\tsetPopup(selectedCountry);\r\n\t\t\tsetMapZoom({ ...mapZoom, zoom: mapZoom.minZoom });\r\n\t\t\tsetViewport({\r\n\t\t\t\tcenter: [lat, long]\r\n\t\t\t});\r\n\t\t}\r\n\t}, [selectedCountry]);\r\n\r\n\tconst handlePopupClose = () => {\r\n\t\tsetPopup(null);\r\n\t};\r\n\r\n\tconst handleViewportChange = viewport => {\r\n\t\tif (viewport.zoom === mapZoom.zoom) return;\r\n\t\tsetMapZoom({ ...mapZoom, zoom: viewport.zoom });\r\n\t};\r\n\r\n\tconst handleClick = country => {\r\n\t\tconst { lat, long } = country.countryInfo;\r\n\r\n\t\tsetPopup(country);\r\n\t\tsetViewport({\r\n\t\t\t...viewport,\r\n\t\t\tcenter: [lat, long]\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='map__root'>\r\n\t\t\t<LeafletMap\r\n\t\t\t\tmaxBoundsViscosity={1}\r\n\t\t\t\tmaxBounds={[[-180, -Infinity], [180, Infinity]]}\r\n\t\t\t\tworldCopyJump={true}\r\n\t\t\t\tzoomControl={false}\r\n\t\t\t\tonViewportChange={viewport => handleViewportChange(viewport)}\r\n\t\t\t\tcenter={viewport.center}\r\n\t\t\t\tminZoom={mapZoom.minZoom}\r\n\t\t\t\tmaxZoom={mapZoom.maxZoom}\r\n\t\t\t\tzoom={mapZoom.zoom}\r\n\t\t\t\tanimate={true}>\r\n\t\t\t\t<TileLayer\r\n\t\t\t\t\turl='https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png'\r\n\t\t\t\t\tattribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n\t\t\t\t/>\r\n\t\t\t\t{data?.map(country => (\r\n\t\t\t\t\t<Circle\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\thandleClick(country);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={'#F66D55'}\r\n\t\t\t\t\t\tkey={country.country}\r\n\t\t\t\t\t\tcenter={[country.countryInfo.lat, country.countryInfo.long]}\r\n\t\t\t\t\t\tfillOpacity={0.5}\r\n\t\t\t\t\t\tradius={Math.sqrt(country.cases * 6000 * 50)}></Circle>\r\n\t\t\t\t))}\r\n\t\t\t\t{popup && <InfoPopup data={popup} handlePopupClose={handlePopupClose} />}\r\n\t\t\t</LeafletMap>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nMap.propTypes = {\r\n\tdata: PropTypes.array,\r\n\tsetSelectedCountry: PropTypes.func,\r\n\tmapZoom: PropTypes.object,\r\n\tsetMapZoom: PropTypes.func\r\n};\r\n\r\nexport default Map;\r\n","import React from 'react';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { useQuery } from 'react-query';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { defaults } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\n\r\nimport './Graph.css';\r\n\r\ndefaults.global.defaultFontFamily = 'Roboto';\r\ndefaults.global.defaultFontColor = 'Black';\r\n\r\nconst options = {\r\n\tlegend: {\r\n\t\tdisplay: false\r\n\t},\r\n\telements: {\r\n\t\tpoint: {\r\n\t\t\tradius: 0\r\n\t\t}\r\n\t},\r\n\tmaintainAspectRatio: true,\r\n\ttooltips: {\r\n\t\tmode: 'index',\r\n\t\tintersect: false,\r\n\t\tcallbacks: {\r\n\t\t\tlabel: function(tooltipItem, data) {\r\n\t\t\t\treturn numeral(tooltipItem.value).format('0a');\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscales: {\r\n\t\txAxes: [\r\n\t\t\t{\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: false\r\n\t\t\t\t},\r\n\t\t\t\ttype: 'time',\r\n\t\t\t\ttime: {\r\n\t\t\t\t\ttooltipFormat: 'll',\r\n\t\t\t\t\tunitStepSize: 11,\r\n\t\t\t\t\tdisplayFormats: {\r\n\t\t\t\t\t\tday: 'DD MMM',\r\n\t\t\t\t\t\tweek: 'DD MMM',\r\n\t\t\t\t\t\tmonth: 'DD MMM',\r\n\t\t\t\t\t\tquarter: 'DD MMM',\r\n\t\t\t\t\t\tyear: 'DD MMM'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t],\r\n\t\tyAxes: [\r\n\t\t\t{\r\n\t\t\t\tgridLines: {\r\n\t\t\t\t\tdisplay: true\r\n\t\t\t\t},\r\n\t\t\t\tticks: {\r\n\t\t\t\t\tcallback: function(value, index) {\r\n\t\t\t\t\t\tif (index % 2 !== 0) {\r\n\t\t\t\t\t\t\treturn numeral(value).format('0a');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n};\r\n\r\nconst fethcGraphData = async () => {\r\n\tconst res = await fetch('https://disease.sh/v3/covid-19/historical/all');\r\n\tconst data = await res.json();\r\n\r\n\tif (data && data.message) return null;\r\n\r\n\treturn {\r\n\t\tlabels: Object.keys(data.cases || data.timeline.cases),\r\n\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tdata: Object.values(data.cases || data.timeline.cases),\r\n\t\t\t\tfill: true,\r\n\t\t\t\tbackgroundColor: 'rgba(239,100,88,0.5)',\r\n\t\t\t\tborderColor: '#EF6458',\r\n\t\t\t\tborderCapStyle: 'butt',\r\n\t\t\t\tborderDash: [],\r\n\t\t\t\tpointHoverBorderWidth: 2,\r\n\t\t\t\tpointRadius: 1,\r\n\t\t\t\tpointHitRadius: 10\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n};\r\n\r\nconst Graph = () => {\r\n\tconst { data, status } = useQuery('graphData', fethcGraphData);\r\n\r\n\treturn (\r\n\t\t<div className='graph__root'>\r\n\t\t\t{status === 'loading' && <Skeleton variant='rect' width={'100%'} height={166} />}\r\n\t\t\t{data && <Line data={data || {}} options={options}></Line>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Graph;\r\n","import React from 'react';\r\nimport { Graph } from '.';\r\nimport { Card, CardContent, Typography, Hidden } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { useQuery } from 'react-query';\r\nimport NumberFormat from 'react-number-format';\r\nimport ReactTimeAgo from 'react-time-ago';\r\nimport JavascriptTimeAgo from 'javascript-time-ago';\r\nimport en from 'javascript-time-ago/locale/en';\r\n\r\nimport './CasesCard.css';\r\nJavascriptTimeAgo.addLocale(en);\r\n\r\nconst fetchAll = async () => {\r\n\tconst res = await fetch('https://disease.sh/v3/covid-19/all');\r\n\treturn res.json();\r\n};\r\n\r\nconst CasesCard = () => {\r\n\tconst { data, status } = useQuery('all', fetchAll);\r\n\r\n\treturn (\r\n\t\t<Hidden smDown>\r\n\t\t\t<Card className='casesCard__root'>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<div className='casesCard__header'>\r\n\t\t\t\t\t\t<Typography variant='h5' color='textPrimary'>\r\n\t\t\t\t\t\t\tCases worldwide\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t{data && data.updated && (\r\n\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' gutterBottom>\r\n\t\t\t\t\t\t\t\tUpdated {<ReactTimeAgo date={new Date(data.updated)} />}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='casesCard__container'>\r\n\t\t\t\t\t\t<div className='casesCard__dataGroup'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.cases}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Cases total'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tprefix={'+'}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.todayCases}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Cases today'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='casesCard__dataGroup'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.recovered}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Recovered total'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tprefix={'+'}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.todayRecovered}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Recovered today'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='casesCard__dataGroup'>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.deaths}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Deaths total'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Typography variant='h6' color='textPrimary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' && <Skeleton />}\r\n\t\t\t\t\t\t\t\t\t{data && (\r\n\t\t\t\t\t\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\t\t\t\t\t\tprefix={'+'}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={data.todayDeaths}\r\n\t\t\t\t\t\t\t\t\t\t\tdisplayType={'text'}\r\n\t\t\t\t\t\t\t\t\t\t\tthousandSeparator={true}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t{status === 'error' && '-'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant='subtitle2' color='textSecondary'>\r\n\t\t\t\t\t\t\t\t\t{status === 'loading' ? <Skeleton /> : 'Deaths today'}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Graph />\r\n\t\t\t\t</CardContent>\r\n\t\t\t</Card>\r\n\t\t</Hidden>\r\n\t);\r\n};\r\n\r\nexport default CasesCard;\r\n","import React from 'react';\r\nimport { TextField, Card } from '@material-ui/core';\r\nimport { Autocomplete } from '@material-ui/lab';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Search.css';\r\n\r\nconst Search = ({ data, setSelectedCountry }) => {\r\n\tconst handleOnChange = (e, newValue) => {\r\n\t\tsetSelectedCountry(newValue);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className='search__root'>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tclassName='search__autocomplete'\r\n\t\t\t\toptions={data || []}\r\n\t\t\t\tonChange={(e, newValue) => handleOnChange(e, newValue)}\r\n\t\t\t\tautoHighlight\r\n\t\t\t\tgetOptionLabel={option => option.country || ''}\r\n\t\t\t\trenderOption={option => option.country}\r\n\t\t\t\trenderInput={params => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\tlabel='Choose a country'\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tinputProps={{\r\n\t\t\t\t\t\t\t...params.inputProps,\r\n\t\t\t\t\t\t\tautoComplete: 'new-password'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nSearch.propTypes = {\r\n\tdata: PropTypes.array,\r\n\tsetSelectedCountry: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport { Card, IconButton, Divider, Hidden } from '@material-ui/core';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './ZoomControl.css';\r\n\r\nconst ZoomControl = ({ mapZoom, setMapZoom }) => {\r\n\tconst handleZoomIn = () => {\r\n\t\tsetMapZoom({ ...mapZoom, zoom: mapZoom.zoom + 1 });\r\n\t};\r\n\r\n\tconst handleZoomOut = () => {\r\n\t\tsetMapZoom({ ...mapZoom, zoom: mapZoom.zoom - 1 });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Hidden xsDown>\r\n\t\t\t<Card className='zoomControl__root'>\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={mapZoom.zoom === mapZoom.maxZoom}\r\n\t\t\t\t\tonClick={handleZoomIn}\r\n\t\t\t\t\taria-label='zoom in'\r\n\t\t\t\t\tsize='small'>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={mapZoom.zoom === mapZoom.minZoom}\r\n\t\t\t\t\tonClick={handleZoomOut}\r\n\t\t\t\t\taria-label='zoom out'\r\n\t\t\t\t\tsize='small'>\r\n\t\t\t\t\t<RemoveIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</Card>\r\n\t\t</Hidden>\r\n\t);\r\n};\r\n\r\nZoomControl.propTypes = {\r\n\tmapZoom: PropTypes.object,\r\n\tsetMapZoom: PropTypes.func\r\n};\r\n\r\nexport default ZoomControl;\r\n","import React from 'react';\r\nimport { Search, ZoomControl, CasesCard } from './';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Layout.css';\r\n\r\nconst Layout = ({ data, setSelectedCountry, mapZoom, setMapZoom }) => {\r\n\treturn (\r\n\t\t<div className='layout__root'>\r\n\t\t\t<ZoomControl mapZoom={mapZoom} setMapZoom={setMapZoom} />\r\n\t\t\t<Search data={data} setSelectedCountry={setSelectedCountry} />\r\n\t\t\t<CasesCard />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nLayout.propTypes = {\r\n\tdata: PropTypes.array,\r\n\tsetSelectedCountry: PropTypes.func,\r\n\tmapZoom: PropTypes.object,\r\n\tsetMapZoom: PropTypes.func\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\r\n\r\nconst Loading = ({ status }) => {\r\n\treturn (\r\n\t\t<Backdrop\r\n\t\t\tstyle={{ zIndex: 9000, display: 'flex', flexDirection: 'column' }}\r\n\t\t\topen={status === 'loading' ? true : false}>\r\n\t\t\t<CircularProgress style={{ color: 'white' }} />\r\n\t\t\t<Typography variant='h6' style={{ color: 'white', marginTop: '2rem' }}>\r\n\t\t\t\tLoading goodies..\r\n\t\t\t</Typography>\r\n\t\t</Backdrop>\r\n\t);\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Backdrop, Typography } from '@material-ui/core';\r\n\r\nconst Error = ({ status }) => {\r\n\treturn (\r\n\t\t<Backdrop\r\n\t\t\tstyle={{ zIndex: 9000, display: 'flex', flexDirection: 'column' }}\r\n\t\t\topen={status === 'error' ? true : false}>\r\n\t\t\t<div>\r\n\t\t\t\t<Typography align='left' variant='h3' style={{ color: 'white' }}>\r\n\t\t\t\t\tAw, snap!\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant='h6' style={{ color: 'white' }}>\r\n\t\t\t\t\tSomething went wrong while displaying this site\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t</Backdrop>\r\n\t);\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState } from 'react';\nimport { Map, Layout, Loading, Error } from './components';\nimport { useQuery } from 'react-query';\n\nimport './App.css';\n\nconst fetchData = async () => {\n\tconst res = await fetch('https://disease.sh/v3/covid-19/countries');\n\treturn res.json();\n};\n\nfunction App() {\n\tconst [selectedCountry, setSelectedCountry] = useState(null);\n\tconst [mapZoom, setMapZoom] = useState({ zoom: 3, minZoom: 3, maxZoom: 18 });\n\tconst { data, status } = useQuery('countries', fetchData, { refetchOnWindowFocus: false });\n\n\treturn (\n\t\t<div className='app__root'>\n\t\t\t<Loading status={status} />\n\t\t\t<Error status={status} />\n\t\t\t<Layout\n\t\t\t\tdata={data}\n\t\t\t\tsetSelectedCountry={setSelectedCountry}\n\t\t\t\tmapZoom={mapZoom}\n\t\t\t\tsetMapZoom={setMapZoom}\n\t\t\t/>\n\t\t\t<Map\n\t\t\t\tdata={data}\n\t\t\t\tselectedCountry={selectedCountry}\n\t\t\t\tmapZoom={mapZoom}\n\t\t\t\tsetMapZoom={setMapZoom}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}